{
  "name": "firebase-chat",
  "version": "0.0.1",
  "author": "alker",
  "license": "MIT",
  "private": true,
  "browserslist": [
    "> 2%",
    "not dead"
  ],
  "targets": {
    "app": {
      "context": "browser",
      "engines": {
        "browsers": [
          "> 2%",
          "not dead"
        ]
      },
      "includeNodeModules": {
        "inferno": false,
        "firebase/app": false,
        "firebase/database": false,
        "firebase/storage": false
      }
    }
  },
  "alias": {
    "lib": "~/src/lib",
    "components": "~/src/components",
    "/__/firebase": "https://www.gstatic.com/firebasejs"
  },
  "distDir": "build",
  "scripts": {
    "start": "run-s start:snowpack",
    "start:snowpack": "snowpack dev --port 8080",
    "build": "snowpack build",
    "test": "jest --verbose -i",
    "test:detect": "jest --verbose -i --detectOpenHandles",
    "citest": "CI=true jest --reporters=default --reporters=jest-github-action-reporter",
    "rdb:compile:core": "tsc -d -t 'ES2019' -m commonjs --outDir ./scripts/dist ./scripts/database-rules-build-core.ts",
    "rdb:build": "ts-node -sT ./scripts/database-rules-build database.rules.json",
    "rdb:emulator:get:rule": "node ./scripts/database-emulator-access -a -p '/.settings/rules.json?ns=talker-v1'",
    "rdb:emulator:put:rule": "ts-node -sT ./scripts/database-rules-build $HOME/bind/firebase-emulator/rules/talker-v1.rules.json",
    "page:add": "node ./scripts/add-page.js",
    "page:delete": "node ./scripts/delete-page.js"
  },
  "devDependencies": {
    "@alker/solid-styled-tsx": "file:./src/lib/packages/solid-styled-tsx",
    "@babel/core": "^7.12.3",
    "@babel/plugin-proposal-class-properties": "^7.12.1",
    "@babel/plugin-proposal-object-rest-spread": "^7.12.1",
    "@babel/preset-env": "^7.12.1",
    "@babel/preset-typescript": "^7.12.1",
    "@firebase/app": "^0.6.13",
    "@firebase/component": "^0.1.21",
    "@firebase/rules-unit-testing": "^1.1.0",
    "@fullhuman/postcss-purgecss": "^3.0.0",
    "@snowpack/plugin-babel": "^2.1.4",
    "@snowpack/plugin-build-script": "^2.0.11",
    "@snowpack/plugin-postcss": "^1.0.7",
    "@snowpack/plugin-run-script": "^2.2.0",
    "@types/jest": "^26.0.15",
    "@types/node": "^14.14.7",
    "@types/snowpack-env": "^2.3.2",
    "@types/styled-jsx": "^2.2.8",
    "@typescript-eslint/eslint-plugin": "^4.7.0",
    "@typescript-eslint/parser": "^4.7.0",
    "babel-plugin-macros": "^2.8.0",
    "babel-plugin-transform-remove-console": "^6.9.4",
    "babel-preset-solid": "^0.21.3",
    "connect": "^3.7.0",
    "dotenv": "^8.2.0",
    "eslint": "^7.13.0",
    "eslint-config-airbnb-typescript": "^12.0.0",
    "eslint-config-prettier": "^6.15.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jest": "^24.1.0",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-react": "^7.21.5",
    "firebase": "^8.0.1",
    "firebase-admin": "^9.3.0",
    "firebase-tools": "^8.15.1",
    "jest": "^26.6.3",
    "jest-github-actions-reporter": "^1.0.2",
    "long": "^4.0.0",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.1.7",
    "postcss-cli": "^8.2.0",
    "postcss-import": "^13.0.0",
    "postcss-import-url": "^5.1.0",
    "postcss-ts-classnames": "^0.2.0",
    "posthtml": "^0.13.4",
    "posthtml-cli": "^0.8.0",
    "posthtml-expressions": "^1.6.1",
    "posthtml-extend": "^0.5.1",
    "posthtml-include": "^1.6.0",
    "prettier": "^2.1.2",
    "pretty-quick": "^3.1.0",
    "purgecss": "^3.0.0",
    "purgecss-from-js": "^1.0.0",
    "querystring": "^0.2.0",
    "snowpack": "^2.16.1",
    "source-map-support": "^0.5.19",
    "stylelint": "^13.7.2",
    "stylelint-config-prettier": "^8.0.2",
    "stylelint-config-standard": "^20.0.0",
    "stylelint-prettier": "^1.1.2",
    "superstatic": "^7.0.1",
    "supports-color": "^7.2.0",
    "ts-jest": "^26.4.4",
    "ts-node": "^9.0.0",
    "type-filtered-clsx": "file:./src/lib/packages/type-filtered-clsx",
    "typescript": "^4.0.5",
    "url": "^0.11.0",
    "websocket-driver": "^0.7.4"
  },
  "dependencies:about": {
    "module: solid": "DOM renderer",
    "module: clsx": "function of CSS class name",
    "module: firebase": "Firebase",
    "dev-tool: @babel/core": "JS transformer",
    "dev-tool: babel-plugin-macros": "JS macro",
    "dev-tool: @babel/preset-env": "Modern JS to ES5",
    "dev-tool: @babel/preset-typecsript": "TS to JS",
    "dev-tool: @babel/proposals-class-properties": "In JS, class",
    "dev-tool: @babel/proposals-object-rest-spread": "In JS, spread",
    "dev-tool: fast-fp.macro": "macro of pipe",
    "dev-tool: inline-loops.macro": "macro of loop",
    "dev-tool: postcss": "CSS transformer",
    "dev-tool: postcss-cli": "CLI of PostCSS",
    "dev-tool: postcss-import": "In CSS, @import",
    "dev-tool: postcss-import-url": "In CSS, @import from CDN",
    "dev-tool: postcss-ts-classname": ".d.ts from CSS",
    "dev-tool: @fullhuman/postcss-purgecss": "combine: postcss & purgecss",
    "dev-tool: precss": "In CSS, many-future",
    "dev-tool: posthtml": "HTML transformer",
    "dev-tool: posthtml-cli": "CLI of PostHTML",
    "dev-tool: posthtml-expressions": "In HTML, meny expressions",
    "dev-tool: posthtml-extend": "In HTML, extend",
    "dev-tool: posthtml-include": "In HTML, include",
    "dev-tool: purgecss": "delete unused css",
    "dev-tool: purgecss-from-js": "combine: purgecss & JS",
    "dev-tool: snowpack": "module builder",
    "dev-tool: stylelint": "linter for css",
    "dev-tool: stylelint-config-standard": "base config of stylelint",
    "dev-tool: stylelint-config-prettier": "prettier config of stylelint",
    "dev-tool: stylelint-prettier": "combine: prettier & stylelint",
    "dev-tool: npm-run-all": "multiple scripts",
    "dev-tool: jest": "test tool",
    "dev-tool: jest-github-actions-reporter": "add pull request annotation when jest error",
    "dev-tool: pipe-and-compose-types": "type of pipe function",
    "linter & formatter: prettier": "formatter",
    "linter & formatter: pretty-quick": "format only modified file",
    "linter & formatter: eslint": "linter",
    "linter & formatter: eslint-config-prettier": "combine: eslint & prettier",
    "linter & formatter: eslint-config-airbnb-typescript": "eslint base config",
    "linter & formatter: eslint-plugin-prettier": "combine: eslint & prettier",
    "linter & formatter: eslint-plugin-import": "for airbnb",
    "linter & formatter: eslint-plugin-jsx-a11y": "for airbnb",
    "linter & formatter: eslint-plugin-react": "for airbnb",
    "linter & formatter: @typescript-esllint/parser": "combine: eslint & typescript",
    "linter & formatter: @typescript-esllint/eslint-plugin": "combine: eslint & typescript",
    "for-firebase: firebase-tools": "Firebase",
    "for-firebase: connect": "server for Firebase",
    "for-firebase: superstatic": "provider for Firebase",
    "for-firebase: websocket-driver": "websockets (HMR) for Firebase & dev-server",
    "language: squirrelly": "alt html",
    "language: typescript": "typescript",
    "assets: cirrus-ui": "CSS Assets",
    "assets: licia": "JS Utils"
  },
  "dependencies:for-stop-warning": {
    "url": "@types/node",
    "querystring": "@types/node",
    "supports-color": "debug",
    "long": "@protobufjs/inquire",
    "@firebase/app": "@firebase/database",
    "@firebase/component": "@firebase/rules-unit-testing"
  },
  "dependencies": {
    "clsx": "^1.1.1",
    "firebaseui": "^4.7.1",
    "solid-js": "^0.21.6",
    "solid-styled-jsx": "^0.21.6",
    "styled-jsx": "^3.3.1"
  },
  "dependenciesMeta": {
    "fsevents": {
      "built": false
    }
  },
  "jest": {
    "projects": [
      {
        "roots": [
          "<rootDir>/src"
        ],
        "globals": {
          "ts-jest": {
            "tsconfig": "tsconfig.json"
          }
        },
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "setupFiles": [
          "dotenv/config"
        ]
      },
      {
        "roots": [
          "<rootDir>/__tests__"
        ],
        "preset": "ts-jest/presets/js-with-ts",
        "globals": {
          "ts-jest": {
            "tsconfig": "__tests__/tsconfig.json"
          }
        },
        "moduleFileExtensions": [
          "ts",
          "js",
          "json",
          "node"
        ],
        "setupFiles": [
          "dotenv/config"
        ],
        "setupFilesAfterEnv": [
          "<rootDir>/__tests__/firebase/database/rules-custom-matchers.ts"
        ],
        "testMatch": [
          "**/?(*.)+(spec|test).[jt]s?(x)"
        ],
        "modulePaths": [
          "<rootDir>/scripts"
        ],
        "moduleNameMapper": {
          "^@scripts/(.+)": "<rootDir>/scripts/$1"
        },
        "verbose": true
      }
    ]
  }
}
