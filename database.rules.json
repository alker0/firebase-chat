{
  "rules": {
    ".read": false,
    ".write": false,
    "rooms": {
      "$owner_id": {
        ".read": "$owner_id === auth.uid && query.orderByChild === 'created_at'",
        ".indexOn": ["created_at"],
        "$own_room_id": {
          ".read": "$owner_id === auth.uid",
          ".write": "$owner_id === auth.uid && auth.token.email_verified === true && (newData.exists() || !newData.child('room_entrances').hasChild($owner_id+'-'+$own_room_id))",
          ".validate": "$own_room_id.matches(/^[1-3]$/) && newData.hasChildren(['public_info','password'])",
          "public_info": {
            ".read": "data.child('allowed_users').hasChild(auth.uid)",
            ".validate": "newData.hasChildren(['room_name','allowed_users','allowed_users_count','members_count'])",
            "room_name": {
              ".validate": "newData.isString() && 0 < newData.val().length && newData.val().length < 20"
            },
            "allowed_users": {
              "$user_id": { ".validate": "newData.isBoolean()" }
            },
            "allowed_users_count": {
              ".validate": "newData.isNumber() && (data.exists() ? (0 <= newData.val() && newData.val() < 100000) : newData.val() === 0)"
            },
            "members_count": {
              ".validate": "newData.isNumber() && (data.exists() ? (0 <= newData.val() && newData.val() < 100000 && newData.val() <= newData.parent().child('allowed_users_count').val() + 1) : newData.val() === 0)"
            },
            "$other": { ".validate": false }
          },
          "password": {
            ".validate": "newData.isString() && newData.val().length < 16"
          },
          "created_at": {
            ".validate": "newData.val() < now && (!data.exists() || newData.val() === data.val())"
          },
          "$other": { ".validate": false }
        }
      }
    },
    "room_entrances": {
      ".read": "auth !== null",
      "$room_id": {
        ".write": "newData.child('owner_id').val() === auth.uid",
        ".validate": "$room_id === auth.uid+'-'+newData.child('own_room_id').val() && newData.hasChildren(['owner_id','room_name','members_count','created_at']) && newData.parent().parent().hasChild(newData.child('owner_id').val()+'/'+newData.child('own_room_id').val())",
        "owner_id": {
          ".validate": "newData.val() === auth.uid && newData.parent().parent().parent().hasChild('rooms/'+newData.val())"
        },
        "own_room_id": {
          ".validate": "newData.parent().parent().parent().hasChild('rooms/'+newData.parent().child('owner_id').val()+'/'+newData.val())"
        },
        "room_name": {
          ".validate": "newData.val() === newData.parent().parent().parent().child('rooms/'+newData.parent().child('owner_id').val()+'/'+newData.parent().child('own_room_id').val()+'/public_info/room_name').val()"
        },
        "members_count": {
          ".validate": "newData.val() === newData.parent().parent().parent().child('rooms/'+newData.parent().child('owner_id').val()+'/'+newData.parent().child('own_room_id').val()+'/public_info/members_count').val()"
        },
        "created_at": {
          ".validate": "newData.val() < now && (!data.exists() || newData.val() === data.val())"
        },
        "$other": { ".validate": false }
      }
    },
    "entry_requests": {
      "$room_id": {
        ".read": "auth.uid+'-1' <= $room_id && $room_id <= auth.uid+'-3'",
        "$user_id": {
          ".write": "!data.exists() && root.child('rooms').hasChild($room_id) && $user_id === auth.uid",
          ".validate": "newData.hasChild('password')",
          "password": {
            ".validate": "data.isString() && data.val() === root.child('rooms/'+$room_id+'/password').val()"
          },
          "$other": { ".validate": false }
        }
      }
    },
    "$other": { ".validate": false }
  }
}
